/*
 * Qiskit Runtime API
 *
 * The Qiskit Runtime API description
 *
 * The version of the OpenAPI document: 0.31.10
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateJobRequestOneOf {
    /// ID of the program to be executed
    #[serde(rename = "program_id")]
    pub program_id: String,
    /// Name that identifies the backend on which to run the program.
    #[serde(rename = "backend")]
    pub backend: String,
    /// Name and tag of the image to use when running a program (IBM Quantum channel users only). Should follow the pattern \"name:tag\".
    #[serde(rename = "runtime", skip_serializing_if = "Option::is_none")]
    pub runtime: Option<String>,
    /// List of job or program tags
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    /// Logging level of the program
    #[serde(rename = "log_level", skip_serializing_if = "Option::is_none")]
    pub log_level: Option<LogLevel>,
    /// Cost of the job as the estimated time it should take to complete (in seconds). Should not exceed the cost of the program. If the provided value exceeds the maximum, it will be capped at that value.
    #[serde(rename = "cost", skip_serializing_if = "Option::is_none")]
    pub cost: Option<i32>,
    /// Identifier of the session that the job is a part of
    #[serde(rename = "session_id", skip_serializing_if = "Option::is_none")]
    pub session_id: Option<String>,
    /// The ID of the calibration used for the job
    #[serde(rename = "calibration_id", skip_serializing_if = "Option::is_none")]
    pub calibration_id: Option<String>,
    #[serde(rename = "params", skip_serializing_if = "Option::is_none")]
    pub params: Option<Box<models::CreateJobRequestOneOfAllOfParams>>,
    /// When set to true, input parameters are not returned, and the results can only be read once. After the job is completed, input parameters are deleted from the service. After the results are read, they are deleted from the service. When set to false, the input parameters and results follow the standard retention behavior of the API. Only returned in the response if the value is true, otherwise it is omitted.
    #[serde(rename = "private", skip_serializing_if = "Option::is_none")]
    pub private: Option<bool>,
}

impl CreateJobRequestOneOf {
    pub fn new(program_id: String, backend: String) -> CreateJobRequestOneOf {
        CreateJobRequestOneOf {
            program_id,
            backend,
            runtime: None,
            tags: None,
            log_level: None,
            cost: None,
            session_id: None,
            calibration_id: None,
            params: None,
            private: None,
        }
    }
}
/// Logging level of the program
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum LogLevel {
    #[serde(rename = "critical")]
    Critical,
    #[serde(rename = "error")]
    Error,
    #[serde(rename = "warning")]
    Warning,
    #[serde(rename = "info")]
    Info,
    #[serde(rename = "debug")]
    Debug,
}

impl Default for LogLevel {
    fn default() -> LogLevel {
        Self::Critical
    }
}
