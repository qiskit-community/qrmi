/*
 * Qiskit Runtime API
 *
 * The Qiskit Runtime API description
 *
 * The version of the OpenAPI document: 0.31.10
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// EstimatorV2InputOptionsResilienceZne : Additional zero noise extrapolation mitigation options
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EstimatorV2InputOptionsResilienceZne {
    /// A list of floats representing noise factors to use for noise amplification
    #[serde(
        rename = "noise_factors",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub noise_factors: Option<Option<serde_json::Value>>,
    #[serde(rename = "extrapolator", skip_serializing_if = "Option::is_none")]
    pub extrapolator: Option<Box<models::EstimatorV2InputOptionsResilienceZneExtrapolator>>,
    /// Technique to use for amplifying noise.
    #[serde(rename = "amplifier", skip_serializing_if = "Option::is_none")]
    pub amplifier: Option<Amplifier>,
    /// A list of floats representing noise factors to evaluate the fit extrapolation models at, or the string 'auto' to set them based on the noise factors.
    #[serde(
        rename = "extrapolated_noise_factors",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub extrapolated_noise_factors: Option<Option<serde_json::Value>>,
}

impl EstimatorV2InputOptionsResilienceZne {
    /// Additional zero noise extrapolation mitigation options
    pub fn new() -> EstimatorV2InputOptionsResilienceZne {
        EstimatorV2InputOptionsResilienceZne {
            noise_factors: None,
            extrapolator: None,
            amplifier: None,
            extrapolated_noise_factors: None,
        }
    }
}
/// Technique to use for amplifying noise.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Amplifier {
    #[serde(rename = "gate_folding")]
    GateFolding,
    #[serde(rename = "gate_folding_front")]
    GateFoldingFront,
    #[serde(rename = "gate_folding_back")]
    GateFoldingBack,
    #[serde(rename = "pea")]
    Pea,
}

impl Default for Amplifier {
    fn default() -> Amplifier {
        Self::GateFolding
    }
}
