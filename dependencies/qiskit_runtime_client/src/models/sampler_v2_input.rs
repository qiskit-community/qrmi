/*
 * Qiskit Runtime API
 *
 * The Qiskit Runtime API description
 *
 * The version of the OpenAPI document: 0.31.10
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SamplerV2Input : The input for an SamplerV2 API call
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SamplerV2Input {
    /// Primitive Unit Blocs of data. Each PUB is of the form (Circuit, Parameters, Shots) where the circuit is required, parameters should be passed only for parametrized circuits, and shots is optional
    #[serde(rename = "pubs")]
    pub pubs: Vec<Vec<serde_json::Value>>,
    #[serde(rename = "options", skip_serializing_if = "Option::is_none")]
    pub options: Option<Box<models::SamplerV2InputOptions>>,
    /// Default number of shots which applies to all PUBs without shots. This overrides default_shots specified in options.
    #[serde(
        rename = "shots",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub shots: Option<Option<i32>>,
    /// If True, returns a Qiskit-style output, meant to be parsed using the runtime result decoder, or resort to returning pure JSON results (resulting in larger objects)
    #[serde(rename = "support_qiskit", skip_serializing_if = "Option::is_none")]
    pub support_qiskit: Option<bool>,
    /// For SamplerV2, version should always be 2
    #[serde(rename = "version")]
    pub version: i32,
}

impl SamplerV2Input {
    /// The input for an SamplerV2 API call
    pub fn new(pubs: Vec<Vec<serde_json::Value>>) -> SamplerV2Input {
        SamplerV2Input {
            pubs,
            options: None,
            shots: None,
            support_qiskit: None,
            version: 2,
        }
    }
}
